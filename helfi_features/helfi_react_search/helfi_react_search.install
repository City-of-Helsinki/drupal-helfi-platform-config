<?php

use Drupal\helfi_platform_config\ConfigHelper;

/**
 * @file
 * Contains install functions for HELfi react search module
 */

/**
 * Implements hook_install().
 */
function helfi_react_search_install($is_syncing) {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if (!$is_syncing && Drupal::moduleHandler()->moduleExists('update_helper')) {
    helfi_react_search_update_9001();
  }
}

/**
 * Implements hook_uninstall().
 * 
 * Remove configs. 
 */
function helfi_react_search_uninstall() {
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $configFactory */
  $configFactory = \Drupal::configFactory();
  $logger = \Drupal::logger('helfi_react_search');

  $configNames = [
    'core.entity_form_display.paragraph.event_list.default',
    'core.entity_view_display.paragraph.event_list.default',
    'field.field.paragraph.event_list.field_api_url',
    'field.field.paragraph.event_list.field_event_list_description',
    'field.field.paragraph.event_list.field_event_list_title',
    'field.storage.paragraph.field_api_url',
    'field.storage.paragraph.field_event_list_description',
    'field.storage.paragraph.field_event_list_title',
    'paragraphs.paragraphs_type.event_list'
  ];

  foreach ($configNames as $configName) {
    try {
      $configFactory->getEditable($configName)->delete();
   }
    catch (\Exception $e) {
      $logger->warning(sprintf('Unable to uninstall config: %s.', $configName));
    }
  }

}

/**
 * Adds new fields to the Events paragraph.
 */
function helfi_react_search_update_9001() {
  drupal_flush_all_caches();

  $config_location = dirname(__FILE__) . '/config/install/';
  $config_translation_location = dirname(__FILE__) . '/config/language/';

  // Add new config.
  $new_config = [
    'field.storage.paragraph.field_event_location' => 'field.field.paragraph.event_list.field_event_location',
    'field.storage.paragraph.field_event_time' => 'field.field.paragraph.event_list.field_event_time',
    'field.storage.paragraph.field_free_events' => 'field.field.paragraph.event_list.field_free_events',
    'field.storage.paragraph.field_remote_events' => 'field.field.paragraph.event_list.field_remote_events',
  ];

  foreach ($new_config as $field_storage => $field_config) {
    ConfigHelper::installNewField($config_location, $field_storage, $field_config);
    ConfigHelper::installNewConfigTranslation($config_translation_location, $field_config);
  }

  // Update existing config.
  $update_config = [
    'core.entity_form_display.paragraph.event_list.default',
    'core.entity_view_display.paragraph.event_list.default',
  ];

  foreach ($update_config as $config_item) {
    ConfigHelper::updateExistingConfig($config_location, $config_item);
  }
}

/**
 * Remove the show more button and add int list field.
 */
function helfi_react_search_update_9002() {
  // Install new configurations
  $configLocation = dirname(__FILE__) . '/config/install/';
  ConfigHelper::installNewField($configLocation, 'field.storage.paragraph.field_event_count', 'field.field.paragraph.event_list.field_event_count');
  ConfigHelper::installNewConfigTranslation('/config/language/', 'field.field.paragraph.event_list.field_event_count');

  // Update old configurations
  ConfigHelper::updateExistingConfig($configLocation, 'core.entity_form_display.paragraph.event_list.default');
  ConfigHelper::updateExistingConfig($configLocation, 'core.entity_view_display.paragraph.event_list.default');
}
