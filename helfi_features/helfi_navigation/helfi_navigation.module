<?php

/**
 * @file
 * Contains alterations for the Hel.fi navigation.
 */

declare(strict_types = 1);

use Drupal\menu_link_content\MenuLinkContentInterface;
use Drupal\system\MenuInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function helfi_navigation_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if ($variables['theme_hook_original'] === 'menu__external_menu') {
    if (isset($variables['menu_type'])) {
      $suggestions[] = 'menu__external_menu__' . $variables['menu_type'];
    }
    if (str_contains($variables['attributes']['block_id'], 'mega_menu')) {
      $suggestions[] = 'menu__external_menu__mega_menu';
    }
  }
}

/**
 * Implements hook_theme().
 */
function helfi_navigation_theme() {
  return [
    'menu__external_menu__fallback' => [
      'variables' => [
        'menu_name' => NULL,
        'items' => [],
        'attributes' => [],
        'menu_link_back' => [],
        'menu_link_current_or_parent' => [],
      ],
    ],
    'menu__external_menu' => [
      'variables' => [
        'menu_type' => NULL,
        'items' => [],
        'attributes' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_navigation_preprocess_menu__external_menu__fallback(&$variables) {
  if (is_array($variables['items']) && !empty($variables['items'])) {
    foreach ($variables['items'] as &$menu_link) {
      $menu_link['next_url'] = clone $menu_link['url'];
      $menu_link['next_url']->setOption('fragment', 'menu');
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function helfi_navigation_menu_update(MenuInterface $entity) {
  if ($entity->id() === 'main') {
    _helfi_navigation_queue_item($entity);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function helfi_navigation_menu_link_content_update(MenuLinkContentInterface $entity) {
  if ($entity->getMenuName() === 'main') {
    _helfi_navigation_queue_item($entity);
  }
}

/**
 * Create menu update queue item.
 */
function _helfi_navigation_queue_item($entity) {
  // @todo Remove once testing phase is over.
  $menuUpdater = \Drupal::service('helfi_navigation.menu_updater');
  $menuUpdater->syncMenu();

  // @todo Use the queue once testing phase is over.
  // Add item to menu queue.
  // Sanitize the queue manually by adding an item only if the queue is empty.
  /* $queue = \Drupal::queue('helfi_navigation_menu_queue');
  if ($queue->numberOfItems() < 1) {
  $queue->createItem($entity);
  } */
}
