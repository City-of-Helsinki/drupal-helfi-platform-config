<?php

/**
 * @file
 * Contains installation hooks for 'helfi_news_feed' module.
 */

declare(strict_types = 1);

use Drupal\block\Entity\Block;
use Drupal\helfi_api_base\Environment\Environment;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 */
function helfi_navigation_install($is_syncing) : void {
  // Create Menu queue.
  $queue = \Drupal::queue('helfi_navigation_menu_queue');
  $queue->createQueue();

  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if (!$is_syncing) {
    $global_navigation_service = \Drupal::service('helfi_navigation.global_navigation_service');

    try {
      $current_project = $global_navigation_service->getCurrentProject();
    }
    catch (\Exception $exception) {
      return;
    }

    // The frontpage instance can skip the rest.
    if ($global_navigation_service->inFrontPage()) {
      return;
    }

    // Install HDBT theme global navigation module as well.
    if (!Drupal::moduleHandler()->moduleExists('hdbt_global_navigation')) {
      Drupal::service('module_installer')->install([
        'hdbt_global_navigation',
      ]);
    }

    // Create menu blocks for the theme if sub theme is enabled.
    $theme = 'hdbt_subtheme';
    $theme_handler = \Drupal::service('theme_handler');

    $blocks = [
      'external_fallback_menu',
      'external_footer_bottom_navigation',
      'external_footer_top_navigation',
      'external_footer_top_navigation_2',
      'external_header_top_navigation',
      'external_menu_mega_menu',
    ];

    if (
      $theme_handler->themeExists($theme) &&
      $theme_handler->getDefault() === $theme &&
      is_a($current_project, Environment::class)
    ) {
      foreach ($blocks as $block) {
        $parent_block = Block::load($block);
        $new_block = $parent_block->createDuplicateBlock($theme . '_' . $parent_block->id(), $theme);
        $new_block->save();
      }
    }

    // Install block translations.
    $translations = [
      'external_footer_top_navigation' => 'block.block.external_footer_top_navigation',
      'external_footer_top_navigation_2' => 'block.block.external_footer_top_navigation_2',
    ];

    $language_manager = \Drupal::languageManager();
    $config_location = dirname(__FILE__) . '/config/language/';

    foreach ($translations as $block_name => $block_file) {
      foreach ($language_manager->getLanguages() as $language) {
        if ($language->getId() !== $language_manager->getDefaultLanguage()->getId()) {
          $filepath = "{$config_location}{$language->getId()}/{$block_file}.yml";
          if (file_exists($filepath) && $yaml = file_get_contents($filepath)) {
            $data = Yaml::parse($yaml);
            $language_manager->getLanguageConfigOverride($language->getId(), $block_file)
              ->setData($data)
              ->save();

            if (
              $theme_handler->themeExists($theme) &&
              $theme_handler->getDefault() === $theme
            ) {
              $language_manager->getLanguageConfigOverride(
                $language->getId(),
                "block.block.{$theme}_{$block_name}"
              )
                ->setData($data)
                ->save();
            }
          }
        }
      }
    }

    // Remove old instance specific menu blocks.
    $old_menu_blocks = [
      'footertopblock',
      'footertopnavigation',
      'footerbottomnavigation',
      'headertopnavigation',
      'mobile_navigation',
    ];
    $delete = [];

    foreach ($old_menu_blocks as $block) {
      $delete[] = $block;
      if ($theme_handler->getDefault() === $theme) {
        $delete[] = $theme . '_' . $block;
      }
    }

    /** @var \Drupal\Core\Entity\EntityStorageInterface $block_storage */
    $block_storage = \Drupal::service('entity_type.manager')->getStorage('block');
    foreach ($block_storage->loadMultiple($delete) as $block) {
      $block->delete();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function helfi_navigation_uninstall($is_syncing) {
  // Delete Menu queue.
  $queue = \Drupal::queue('helfi_navigation_menu_queue');
  $queue->deleteQueue();
}
