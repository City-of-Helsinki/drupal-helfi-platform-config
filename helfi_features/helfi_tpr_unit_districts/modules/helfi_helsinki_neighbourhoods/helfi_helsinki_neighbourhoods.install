<?php

/**
 * @file
 * Contains helfi_helsinki_neighbourhoods installation procedures.
 */

use Drupal\taxonomy\Entity\Term;

/**
 * Add Helsinki districts.
 */
function helfi_helsinki_neighbourhoods_install() {
  $neighbourhoods = [
    "Ala-Malmi",
    "Ala-Tikkurila",
    "Alppiharju",
    "Alppikylä",
    "Alppila",
    "Arabianranta",
    "Aurinkolahti",
    "Broända",
    "Degermossa",
    "Eira",
    "Etelä-Haaga",
    "Etu-Töölö",
    "Fallkulla",
    "Fallpakka",
    "Haaga",
    "Hakaniemi",
    "Hakuninmaa",
    "Hanasaari",
    "Harju",
    "Heikinlaakso",
    "Hermanni",
    "Hermanninmäki",
    "Hermanninranta",
    "Herttoniemenranta",
    "Herttoniemi",
    "Hevossalmi",
    "Honkasuo",
    "Ilmala",
    "Itä-Pakila",
    "Itä-Pasila",
    "Itäkeskus",
    "Jakomäki",
    "Jollas",
    "Jätkäsaari",
    "Kaartinkaupunki",
    "Kaisaniemi",
    "Kaivopuisto",
    "Kalasatama",
    "Kallahti",
    "Kallio",
    "Kamppi",
    "Kannelmäki",
    "Karhusaari",
    "Katajaharju",
    "Katajanokka",
    "Keski-Pasila",
    "Keski-Vuosaari",
    "Kivihaka",
    "Kivikko",
    "Kluuvi",
    "Koivusaari",
    "Konala",
    "Konepaja",
    "Kontula",
    "Koskela",
    "Kotkavuori",
    "Kruununhaka",
    "Kruunuvuorenranta",
    "Kumpula",
    "Kuninkaantammi",
    "Kurkimäki",
    "Kuusisaari",
    "Kyläsaari",
    "Käpylä",
    "Laajasalo",
    "Laakso",
    "Landbo",
    "Lapinlahti",
    "Latokartano",
    "Latokartanon ylioppilaskylä",
    "Lauttasaari",
    "Lehtisaari",
    "Linjat",
    "Länsi-Herttoniemi",
    "Länsi-Pakila",
    "Länsi-Pasila",
    "Malmi",
    "Malminkartano",
    "Marjaniemi",
    "Marttila",
    "Maunula",
    "Maununneva",
    "Meilahti",
    "Mellunmäki",
    "Meri-Rastila",
    "Merihaka",
    "Metsälä",
    "Munkkiniemi",
    "Munkkisaari",
    "Munkkivuori",
    "Myllykallio",
    "Myllypuro",
    "Niemenmäki",
    "Oulunkylä",
    "Pajamäki",
    "Pakila",
    "Paloheinä",
    "Pasila",
    "Patola",
    "Pihlajamäki",
    "Pihlajisto",
    "Pikku-Huopalahti",
    "Pirkkola",
    "Pitäjänmäki",
    "Pohjois-Haaga",
    "Pohjois-Pasila",
    "Puistola",
    "Pukinmäki",
    "Punavuori",
    "Puotila",
    "Puotinharju",
    "Puroniitty",
    "Ramsinranta",
    "Rastila",
    "Reimarla",
    "Roihuvuori",
    "Ruoholahti",
    "Ruskeasuo",
    "Salmenkallio",
    "Sandbacka",
    "Santahamina",
    "Savela",
    "Sepänmäki",
    "Siltamäki",
    "Siltasaari",
    "Sompasaari",
    "Strömberg",
    "Suomenlinna",
    "Suurmetsä",
    "Suutarila",
    "Sörnäinen",
    "Taka-Töölö",
    "Tali",
    "Talinranta",
    "Talosaari",
    "Tammisalo",
    "Tankovainio",
    "Tapanila",
    "Tapaninkylä",
    "Tapaninvainio",
    "Tapulikaupunki",
    "Tattariharju",
    "Tattarisuo",
    "Torkkelinmäki",
    "Torpparinmäki",
    "Toukola",
    "Tullisaari",
    "Tuomarinkylä",
    "Töyrynummi",
    "Töölö",
    "Töölönlahti",
    "Ullanlinna",
    "Ultuna",
    "Valimo",
    "Vallila",
    "Vanha Munkkiniemi",
    "Vanha Ruskeasuo",
    "Vanhakaupunki",
    "Vartioharju",
    "Vattuniemi",
    "Verkkosaari",
    "Veräjälaakso",
    "Veräjämäki",
    "Vesala",
    "Viikin tiedepuisto",
    "Viikinmäki",
    "Viikinranta",
    "Viikki",
    "Viiskulma",
    "Vilhovuori",
    "Vuosaari",
    "Yliskylä",
    "Ylä-Malmi",
    "Östersundom",
  ];

  $defaultLangcode = Drupal::configFactory()->get('language.content_settings.taxonomy_term.neighbourhoods')->getOriginal('default_langcode');
  $languages = Drupal::languageManager()->getLanguages();
  unset($languages[$defaultLangcode]);
  $langcodes = array_keys($languages);

  // Add terms for the default language.
  foreach ($neighbourhoods as $neighbourhood) {
    $term = Term::create([
      'parent' => [],
      'name' => $neighbourhood,
      'vid' => 'neighbourhoods',
    ]);
    try {
      $term->save();
    } catch (\Drupal\Core\Entity\EntityStorageException $e) {
      Drupal::logger('helfi_helsinki_neighbourhoods')->error('Failed to add term @name. Message: @message',
        [
          '@name' => $neighbourhood,
          '@message' => $e->getMessage(),
        ]);
    }

    // Add default translations for all available languages.
    foreach ($langcodes as $langcode) {
      try {
        $term->addTranslation($langcode, [
          'name' => $neighbourhood,
        ])->save();
      } catch (\InvalidArgumentException $e) {
        Drupal::logger('helfi_helsinki_neighbourhoods')->error('Failed to translate term @name. Message: @message',
          [
            '@name' => $neighbourhood,
            '@message' => $e->getMessage(),
          ]);
      }
    }
  }
}
