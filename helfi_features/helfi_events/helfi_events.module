<?php

use Drupal\helfi_events\EventsProxy;

/**
 * Implements hook_form_alter().
 */
function helfi_events_options_list_alter(array &$options, array $context) { 
  if(method_exists($context['fieldDefinition'], 'id')) {
    // if($context['fieldDefinition']->id() == 'paragraph.event_list.field_neighborhoods') {
    //   $eventsProxy = Drupal::service('helfi_events_proxy');
    //   $options = $eventsProxy->getNeigborgoodOptions();
    // }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function helfi_events_preprocess_paragraph__event_list(&$variables) {
  // Expose event list variables to frontend
  if(isset($variables['paragraph'])) {
    $paragraph = $variables['paragraph'];
    $eventsProxy = Drupal::service('helfi_events_proxy');
    $linkedEvents = Drupal::service('helfi_events_linked_events');
    
    if (!$paragraph->get('field_api_url')->isEmpty()) {
      $params = $linkedEvents->parseParams($paragraph->get('field_api_url')->first()->getUrl()->toString());
      $variables['#attached']['drupalSettings']['helfi_events']['eventsUrl'] = $linkedEvents->getEventsRequest($params);
    }

    if (!$paragraph->get('field_categories')->isEmpty()) {
      $categories = [];
      $variables['#attached']['drupalSettings']['helfi_events']['categories'] = $categories;
    }

    if (!$paragraph->get('field_neighborhoods')->isEmpty()) {
      $neighborhoods = [];
      $variables['#attached']['drupalSettings']['helfi_events']['neighborhoods'] = $neighborhoods;
    }
  }
  
  $variables['#attached']['library'][] = 'helfi_events/events_list';
}
