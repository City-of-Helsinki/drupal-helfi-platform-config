<?php

/**
 * @file
 * Contains install functions for Helfi Base Config.
 */

use Drupal\helfi_platform_config\ConfigHelper;

/**
 * Implements hook_install().
 *
 * Install HDBT and HDBT admin themes and make them as default themes.
 */
function helfi_base_config_install($is_syncing) {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if (!$is_syncing) {
    // Remove the default frontpage view.
    Drupal::configFactory()->getEditable('views.view.frontpage')->delete();
    Drupal::configFactory()->getEditable('system.menu.footer')->delete();

    Drupal::service('theme_installer')->install(['hdbt', 'hdbt_admin']);

    // Remove an obsolete block that is named hdbt_admin.
    Drupal::configFactory()->getEditable('block.block.hdbt_admin')->delete();

    $system_theme = Drupal::configFactory()->getEditable('system.theme');
    $system_theme->set('default', 'hdbt')->set('admin', 'hdbt_admin')->save();

    $node_settings = Drupal::configFactory()->getEditable('node.settings');
    $node_settings->set('use_admin_theme', 'true')->save();

    // Manually install gin_toolbar module.
    $installer = Drupal::service('module_installer');
    $installer->install(['gin_toolbar']);

    // Apply the HELfi base configurations.
    if (Drupal::moduleHandler()->moduleExists('update_helper')) {
      helfi_base_config_update_9001();
      helfi_base_config_update_9002();
      helfi_base_config_update_9006();
      helfi_base_config_update_9007();
      helfi_base_config_update_9008();
    }
  }
}

/**
 * {@inheritdoc}
 */
function helfi_base_config_update_dependencies() {
  // Run helfi_base_config_update_9001()
  // after helfi_platform_config_update_9004().
  $dependencies['helfi_base_config'][9001] = [
    'helfi_platform_config' => 9004,
  ];
  return $dependencies;
}

/**
 * Uninstall config_replace and apply HELfi base configurations.
 *
 * Config replace will be replaced with Config rewrite.
 * See: https://www.drupal.org/project/config_replace/issues/3022176
 */
function helfi_base_config_update_9001() {

  // Uninstall config_replace module if it exists.
  if (Drupal::moduleHandler()->moduleExists('config_replace')) {
    Drupal::service('module_installer')->uninstall([
      'config_replace',
    ]);
  }
  // Install config_rewrite module if it doesn't exist.
  if (!Drupal::moduleHandler()->moduleExists('config_rewrite')) {
    Drupal::service('module_installer')->install([
      'config_rewrite',
    ]);
  }

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_base_config', 'helfi_base_config_update_9001');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Update easybreadcrumb settings and install breadcrumb base links configuration.
 */
function helfi_base_config_update_9002() {

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_base_config', 'helfi_base_config_update_9002');

  $configLocation = dirname(__FILE__) . '/config/install/';
  ConfigHelper::installNewConfig($configLocation, 'helfi_base_config.breadcrumb');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Add module for admins to see other admins' unpublished content.
 */
function helfi_base_config_update_9003() {
  // Install view_unpublished module if not installed.
  if (!Drupal::moduleHandler()->moduleExists('view_unpublished')) {
    Drupal::service('module_installer')->install([
      'view_unpublished',
    ]);
  }
}

/**
 * Install HELfi Table of contents and Translatable menu link uri modules.
 */
function helfi_base_config_update_9004() {
  // Install helfi_toc module if not installed.
  if (!Drupal::moduleHandler()->moduleExists('helfi_toc')) {
    Drupal::service('module_installer')->install([
      'helfi_toc',
    ]);
  }

  // Install translatable_menu_link_uri module if not installed.
  if (!Drupal::moduleHandler()->moduleExists('translatable_menu_link_uri')) {
    Drupal::service('module_installer')->install([
      'translatable_menu_link_uri',
    ]);
  }
}

/**
 * Enable role delegation module.
 */
function helfi_base_config_update_9005() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_base_config', 'helfi_base_config_update_9005');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Maintenance text update.
 */
function helfi_base_config_update_9006() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_base_config', 'helfi_base_config_update_9006');

  // Install updated translations.
  $configTranslationLocation = dirname(__FILE__) . '/config/language/';
  ConfigHelper::installNewConfigTranslation($configTranslationLocation, 'system.maintenance');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Update configuration translations for Helfi Base config.
 */
function helfi_base_config_update_9007() {
  // Handle the configuration translation update manually.
  $configTranslationLocation = dirname(__FILE__) . '/config/language/';
  ConfigHelper::installNewConfigTranslation($configTranslationLocation, 'views.view.scheduler_scheduled_content');
}

/**
 * Install views bulk operations modules.
 */
function helfi_base_config_update_9008() {
  // Install views_bulk_operations module if not installed.
  if (!Drupal::moduleHandler()->moduleExists('views_bulk_operations')) {
    Drupal::service('module_installer')->install([
      'views_bulk_operations',
    ]);
  }
  // Install views_bulk_edit module if not installed.
  if (!Drupal::moduleHandler()->moduleExists('views_bulk_edit')) {
    Drupal::service('module_installer')->install([
      'views_bulk_edit',
    ]);
  }

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_base_config', 'helfi_base_config_update_9008');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}
