<?php

use Drupal\helfi_platform_config\ConfigHelper;

/**
 * Implements hook_install().
 *
 * Update HELfi Media configurations when
 * installing module for the first time.
 */
function helfi_media_install($is_syncing) {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import
  if (!$is_syncing && Drupal::moduleHandler()->moduleExists('update_helper')) {
    helfi_media_update_9001();
    helfi_media_update_9003();
    helfi_media_update_9007();
  }
}

/**
 * {@inheritdoc}
 */
function helfi_media_update_dependencies() {
  // Run helfi_media_update_9001()
  // after helfi_platform_config_update_9004() and helfi_base_config_9001().
  $dependencies['helfi_media'][9001] = [
    'helfi_platform_config' => 9004,
    'helfi_base_config' => 9001,
  ];

  // Run helfi_media_update_9004() after helfi_content_update_9016()
  // has been run. helfi_content_update_9016() update will reinstall
  // user roles and permissions for authenticated and anonymous users.
  $dependencies['helfi_media'][9004] = [
    'helfi_content' => 9016,
  ];

  // Run helfi_media_update_9005() after helfi_content_update_9017()
  // has been run. helfi_content_update_9017() update will install content_lock
  // module with default configuration.
  $dependencies['helfi_media'][9005] = [
    'helfi_content' => 9017,
  ];

  return $dependencies;
}

/**

/**
 * Install Base configuration for Helfi Media.
 */
function helfi_media_update_9001() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_media', 'helfi_media_update_9001');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Install Helsinki-kanava (Icareus suite) oembed provider.
 */
function helfi_media_update_9002() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Install Oembed providers module if it's not enabled'.
  if (!Drupal::moduleHandler()->moduleExists('oembed_providers')) {
    Drupal::service('module_installer')->install(['oembed_providers']);
  }

  // Install Helsinki-kanava Oembed provider (Icareus suite).
  $configLocation = dirname(__FILE__) . '/config/install/';
  ConfigHelper::installNewConfig($configLocation, 'oembed_providers.provider.icareus_suite');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_media', 'helfi_media_update_9002');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Install Helfi Charts module and add media edit links to media library widget.
 */
function helfi_media_update_9003() {
  // Install Helfi Charts module.
  if (!Drupal::moduleHandler()->moduleExists('helfi_charts')) {
    Drupal::service('module_installer')->install(['helfi_charts']);

    // Override Media library views with enhanced view.
    $configLocation = dirname(__FILE__) . '/config/override/';
    ConfigHelper::updateExistingConfig($configLocation, 'views.view.media_library');
  }
}

/**
 * Update anonymous and authenticated user role permissions.
 */
function helfi_media_update_9004() {
  // Handle the configuration update manually.
  $configLocation = dirname(__FILE__) . '/config/override/';

  $configurations = [
    'user.role.authenticated',
    'user.role.anonymous',
  ];

  // Install configurations.
  foreach ($configurations as $configuration) {
    ConfigHelper::updateExistingConfig($configLocation, $configuration);
  }
}

/**
 * Install and configure content_lock module.
 */
function helfi_media_update_9005() {
  // Path for the configuration that overrides default configuration.
  $configOverrideLocation = dirname(__FILE__) . '/config/override/';

  // Add configuration changes that apply to media-entities.
  ConfigHelper::updateExistingConfig($configOverrideLocation, 'content_lock.settings');
}

/**
 * Revert Update 9006.
 */
function helfi_media_update_9006() {
  // Do nothing.
}

/**
 * Install media_entity_file_replace module and configuration.
 */
function helfi_media_update_9007() {

  if (!\Drupal::moduleHandler()->moduleExists('media_entity_file_replace')) {
    Drupal::service('module_installer')->install(['media_entity_file_replace']);

    /** @var \Drupal\update_helper\Updater $updateHelper */
    $updateHelper = \Drupal::service('update_helper.updater');

    // Execute configuration update definitions with logging of success.
    $updateHelper->executeUpdate('helfi_media', 'helfi_media_update_9007');

    // Output logged messages to related channel of update execution.
    return $updateHelper->logger()->output();
  }
}

/**
 * Fix the media edit link url in media library widget.
 */
function helfi_media_update_9008() {
  $configLocation = dirname(__FILE__) . '/config/override/';
  ConfigHelper::updateExistingConfig($configLocation, 'views.view.media_library');
}
