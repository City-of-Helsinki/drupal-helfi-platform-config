<?php

/**
 * @file
 * Contains HELfi media alterations.
 */

use Drupal\Component\Utility\UrlHelper;
use Drupal\media\OEmbed\Provider;

const HELSINKI_KANAVA_URL_PATTERN = 'https://www.helsinkikanava.fi/*/web/helsinkikanava/player/vod?assetId=*';

/**
 * Implements hook_media_source_info_alter().
 */
function helfi_media_media_source_info_alter(array &$sources) {
  // Add Helsinki-kanava (Icareus Suite) as an available provider.
  $sources['oembed:video']['providers'][] = 'Icareus Suite';
}

/**
 * Implements hook_oembed_resource_url_alter().
 */
function helfi_media_oembed_resource_url_alter(array &$parsed_url, Provider $provider) {
  // Alter the parsed URL of Helsinki-kanava video (Icareus Suite).
  if ($provider->getName() === 'Icareus Suite') {
    if (
      !array_key_exists('maxwidth', $parsed_url['query']) ||
      !array_key_exists('maxheight', $parsed_url['query'])
    ) {
      $parsed_url['query']['maxwidth'] = 1264;
      $parsed_url['query']['maxheight'] = 714;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function helfi_media_form_media_remote_video_add_form_alter(&$form, &$form_state) {
  _helfi_media_remote_video_validate($form, $form_state);
}

/**
 * Implements hook_form_alter().
 */
function helfi_media_form_media_library_add_form_oembed_alter(&$form, &$form_state) {
  _helfi_media_remote_video_validate($form, $form_state);
}

function _helfi_media_remote_video_validate(&$form, &$form_state) {
  $oembed_video_field = 'field_media_oembed_video';

  // Alter Oembed video field value only if it's set and user has input data.
  if (
    !isset($form[$oembed_video_field]) ||
    empty($form_state->getUserInput())
  ) {
    return;
  }

  $user_input = $form_state->getUserInput();

  // Handle only Oembed video field.
  if (
    !array_key_exists($oembed_video_field, $user_input) ||
    empty($video_url = &$user_input[$oembed_video_field][0]['value'])
  ) {
    return;
  }

  $converted_url = FALSE;
  $url_resolver = \Drupal::service('media.oembed.url_resolver');
  $provider = $url_resolver->getProviderByUrl($video_url);

  // Handle only Helsinki-kanava videos (Icareus Suite).
  if ($provider->getName() !== 'Icareus Suite') {
    return;
  }

  // Convert the
  if (str_contains($video_url, 'player/event/view')) {
    preg_match( '/helsinkikanava.fi\/((?i)[a-z]{2})/', $video_url, $language_matches);
    $lang_code = $language_matches[1];
    preg_match( '/assetId=(\d+)/', $video_url, $asset_id_matches);
    $asset_id = $asset_id_matches[1];

    if (empty($asset_id)) {
      return;
    }

    $lang_code = empty($lang_code) ? 'fi' : $lang_code;
    $url_parts = explode('*', HELSINKI_KANAVA_URL_PATTERN);
    $converted_url = $url_parts[0] . $lang_code . $url_parts[1] . $asset_id;
  }

  // Set
  if (!$converted_url) {
    return;
  }

  $video_url = $converted_url;
  $form_state->setUserInput($user_input);
  $form_state->setValue($oembed_video_field, $user_input[$oembed_video_field]);
}

/**
 * Implements hook_entity_presave().
 */
function helfi_media_entity_presave($entity) {
  $a = 1;

  if (!method_exists($entity, 'hasField') || !$entity->hasField('color_palette')) {
    return;
  }

  // Do not save the color palette override value if chosen color palette is
  // same as global color palette value. This will prevent possible false
  // overrides if global color palette is changed.
}
