<?php

/**
 * @file
 * Contains install functions for HELfi TPR configuration.
 */

use Drupal\Core\Field\FieldStorageDefinitionInterface;

/**
 * Implements hook_install().
 */
function helfi_tpr_config_install($is_syncing) {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import
  if (!$is_syncing && Drupal::moduleHandler()->moduleExists('update_helper')) {
    helfi_tpr_config_update_9001();
    helfi_tpr_config_update_9002();
    helfi_tpr_config_update_9003();
    helfi_tpr_config_update_9004();
    helfi_tpr_config_update_9005();
  }
}

/**
 * {@inheritdoc}
 */
function helfi_tpr_config_update_dependencies() {
  // Run helfi_tpr_config_update_9002()
  // after helfi_platform_config_update_9004() and helfi_base_config_9001().
  $dependencies['helfi_tpr_config'][9002] = [
    'helfi_platform_config' => 9004,
    'helfi_base_config' => 9001,
  ];
  $dependencies['helfi_tpr_config'][9003] = [
    'helfi_content' => 9003,
  ];
  return $dependencies;
}

/**
 * Install 'color palette' field to TPR Unit and TPR Service entities.
 */
function helfi_tpr_config_update_9001() {

  // Field to be installed and entity types.
  $field = 'color_palette';
  $entity_types = [
    'tpr_unit',
    'tpr_service'
  ];

  foreach ($entity_types as $entity_type) {
    $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
    $field_definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions($entity_type, $entity_type);
    if (!empty($field_definitions[$field]) && $field_definitions[$field] instanceof FieldStorageDefinitionInterface) {
      $entity_definition_update_manager->installFieldStorageDefinition($field, $entity_type,'hdbt_admin_editorial', $field_definitions[$field]);
    }
  }
}

/**
 * Base configurations for HELfi TPR config module.
 */
function helfi_tpr_config_update_9002() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9002');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Add tpr_service and tpr_unit to linkit profile.
 */
function helfi_tpr_config_update_9003() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9003');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Pathauto configuration for TPR units and services.
 */
function helfi_tpr_config_update_9004() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9004');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Modify unit teaser display to include image field and remove phone number field.
 */
function helfi_tpr_config_update_9005() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9005');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Update label for Unit views load more button.
 */
function helfi_tpr_config_update_9006() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9006');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Show five (5) Service points instead of eight (8) in Service page.
 */
function helfi_tpr_config_update_9007() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9007');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Update lower content field to use liftup with image paragraphs.
 */
function helfi_tpr_config_update_9008() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_tpr_config', 'helfi_tpr_config_update_9008');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}
