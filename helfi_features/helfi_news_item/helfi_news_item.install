<?php

/**
 * @file
 */

use Drupal\helfi_platform_config\ConfigHelper;

/**
 * Implements hook_install().
 *
 * Update HELfi News item configurations when
 * installing module for the first time.
 */
function helfi_news_item_install($is_syncing) {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if (!$is_syncing && Drupal::moduleHandler()->moduleExists('update_helper')) {
    helfi_news_item_update_9001();
    helfi_news_item_update_9002();
    helfi_news_item_update_9004();
  }
}

/**
 * {@inheritdoc}
 */
function helfi_news_item_update_dependencies() {
  // Run helfi_news_item_update_9002() after helfi_content_update_9014()
  // has been run. helfi_content_update_9014() update will reinstall
  // user roles and permissions.
  $dependencies['helfi_news_item'][9002] = [
    'helfi_content' => 9014,
  ];
  return $dependencies;
}

/**
 * Base configurations for HELfi News item module.
 */
function helfi_news_item_update_9001() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9001');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Reinstall Helfi News item specific permissions.
 */
function helfi_news_item_update_9002() {
  // Handle the configuration update manually.
  $configLocation = dirname(__FILE__) . '/config/optional/';

  $configurations = [
    'user.role.admin',
    'user.role.content_producer',
    'user.role.editor',
    'user.role.read_only',
  ];

  // Install configurations and translations.
  foreach ($configurations as $configuration) {
    ConfigHelper::updateExistingConfig($configLocation, $configuration);
  }
}

/**
 * Update translations based on customer needs.
 */
function helfi_news_item_update_9003() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9003');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Update configuration translations for Helfi News item.
 */
function helfi_news_item_update_9004() {
  // Handle the configuration translation update manually.
  $configTranslationLocation = dirname(__FILE__) . '/config/language/';

  $configurations = [
    'field.field.node.news_item.field_lead_in',
    'node.type.news_item',
  ];

  // Update translations.
  foreach ($configurations as $configuration) {
    ConfigHelper::installNewConfigTranslation($configTranslationLocation, $configuration);
  }
}

/**
 * Enable text with span element to news item basic string fields.
 */
function helfi_news_item_update_9005() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9005');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Add medium-teaser display for news items.
 */
function helfi_news_item_update_9006() {
  $configLocation = dirname(__FILE__) . '/config/install/';

  $configurations = [
    'core.entity_view_mode.node.medium_teaser',
    'core.entity_view_display.node.news_item.medium_teaser',
  ];

  // Install configurations and translations.
  foreach ($configurations as $configuration) {
    ConfigHelper::installNewConfig($configLocation, $configuration);
  }
}

/**
 * Update News item url pattern, promoted to front page default value and links title default value.
 */
function helfi_news_item_update_9007() {
  $configLocation = dirname(__FILE__) . '/config/install/';

  $configurations = [
    'pathauto.pattern.news_item_en',
    'pathauto.pattern.news_item_fi',
    'pathauto.pattern.news_item_sv',
    'core.base_field_override.node.news_item.promote',
  ];

  // Install new url pattern for News items and update News item promoted
  // to front page field default value.
  foreach ($configurations as $configuration) {
    ConfigHelper::installNewConfig($configLocation, $configuration);
  }

  // Delete old url pattern for News items.
  $config_factory = \Drupal::configFactory();
  $url_pattern_news_item = $config_factory->getEditable('pathauto.pattern.news_item_content_pattern');
  $url_pattern_news_item_data = $url_pattern_news_item->getRawData();
  if (!empty($url_pattern_news_item_data)) {
    $url_pattern_news_item->delete();
  }

  // Add translations for the news item links title default value.
  $configTranslationLocation = dirname(__FILE__) . '/config/language/';
  ConfigHelper::installNewConfigTranslation($configTranslationLocation, 'field.field.node.news_item.field_news_item_links_title');

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9007');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Changes to allowed paragraphs, removed image from tiny teaser and updated translations.
 */
function helfi_news_item_update_9008() {
  // Handle the configuration translation update manually.
  $configTranslationLocation = dirname(__FILE__) . '/config/language/';

  ConfigHelper::installNewConfigTranslation($configTranslationLocation, 'views.view.news');

  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9008');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Added new display mode for news
 */
function helfi_news_item_update_9009() {
  $configLocation = dirname(__FILE__) . '/config/install/';

  $configurations = [
    'core.entity_view_display.node.news_item.card_teaser',
    'core.entity_view_mode.node.card_teaser'
  ];

  // Install new display mode for news item
  foreach ($configurations as $configuration) {
    ConfigHelper::installNewConfig($configLocation, $configuration);
  }
}

/**
 * Adds date format
 */
function helfi_news_item_update_9010() {
  $config_optional = dirname(__FILE__) . '../helfi_content/config/optional/';

  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('core.date_format.publication_date_format');

  //Install date format required for news item
  if (empty($config->getRawData())) {
    ConfigHelper::installNewConfig($config_optional, 'core.date_format.publication_date_format');
  }
}

/**
 * Add translations for the news item groups and neighbourhoods.
 */
function helfi_news_item_update_9011() {
  $config_location = dirname(__FILE__) . '/config/language/';
  $configurations = [
    'field.field.node.news_item.field_news_groups',
    'field.field.node.news_item.field_news_neighbourhoods',
  ];

  // Install new url pattern for News items and update News item promoted
  // to front page field default value.
  foreach ($configurations as $configuration) {
    ConfigHelper::installNewConfigTranslation($config_location, $configuration);
  }
}


/**
 * Enables translations for news item main image
 */
function helfi_news_item_update_9012() {
  /** @var \Drupal\update_helper\Updater $updateHelper */
  $updateHelper = \Drupal::service('update_helper.updater');

  // Execute configuration update definitions with logging of success.
  $updateHelper->executeUpdate('helfi_news_item', 'helfi_news_item_update_9012');

  // Output logged messages to related channel of update execution.
  return $updateHelper->logger()->output();
}

/**
 * Adds old image to all language versions of news item main image
 */
function helfi_news_item_update_9013() {
  $nids = \Drupal::entityQuery('node')->condition('type','news_item')->execute();
  $nodes = \Drupal\node\Entity\Node::loadMultiple($nids);

  foreach ($nodes as $node) {
    if ($node->hasField('field_main_image') && !$node->get('field_main_image')->isEmpty()) {
      $image = $node->get('field_main_image');

      if ($node->hasTranslation('sv')) {
        $swedish = $node->getTranslation('sv');
        $swedish->field_main_image = $image;
        $swedish->save();
      }

      if ($node->hasTranslation('en')) {
        $english = $node->getTranslation('en');
        $english->field_main_image = $image;
        $english->save();
      }

      if ($node->hasTranslation('fi')) {
        $finnish = $node->getTranslation('fi');
        $finnish->field_main_image = $image;
        $finnish->save();
      }
    }
  }
}
