<?php

/**
 * @file
 * Admin tools.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\hdbt_admin_tools\Form\SiteSettings;

/**
 * Implements hook_toolbar_alter().
 */
function hdbt_admin_tools_toolbar_alter(&$items) {
  foreach ($items as $key => $value) {
    if (isset($items[$key]['#attached']) && is_array($items[$key]['#attached']['library'])) {
      $items[$key]['#attached']['library'][] = 'hdbt_admin_tools/menu_styles';
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alter config translation edit form.
 */
function hdbt_admin_tools_form_config_translation_form_alter(&$form, &$form_state, $form_id) {
  if (in_array($form_id, [
    'config_translation_add_form',
    'config_translation_edit_form',
  ])) {
    $settings = &$form['config_names']['hdbt_admin_tools.site_settings'];

    // Don't translate global fields.
    $settings['footer_settings']['footer_color']['#disabled'] = TRUE;
    $settings['site_settings']['koro']['#disabled'] = TRUE;
    $settings['site_settings']['theme_color']['#disabled'] = TRUE;

    // Custom submit callback to invalidate caches.
    $form['#submit'][] = '_hdbt_admin_tools_config_translation_form_submit';
  }
}

/**
 * Submit callback for config translations.
 *
 * @param array $form
 *   Form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 */
function _hdbt_admin_tools_config_translation_form_submit(array $form, FormStateInterface $form_state) {
  Cache::invalidateTags([
    'config:block.block.footertopblock',
  ]);
}

/**
 * Provides options for the color palettes field.
 *
 * @return array
 *   An array of possible key and value options.
 *
 * @see options_allowed_values()
 */
function hdbt_admin_tools_color_palette_allowed_values() {
  return SiteSettings::getColorPalettes();
}

/**
 * Provides default value for the color palettes field.
 *
 * @return array
 *   An array of possible key and value options.
 *
 * @see options_allowed_values()
 */
function hdbt_admin_tools_color_palette_default_value() {
  $cached = \Drupal::cache()->get('hdbt_settings:theme_color');

  if ($cached) {
    return [
      ['value' => $cached->data],
    ];
  }

  $settings = \Drupal::config('hdbt_admin_tools.site_settings');
  return ($value = $settings->get('site_settings.theme_color')) ? [['value' => $value]] : [];
}
