<?php

/**
 * @file
 * Contains 'helfi_news_feed' hooks.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\helfi_news_feed\Entity\NewsFeedParagraph;
use Drupal\paragraphs\ParagraphInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function helfi_news_feed_entity_extra_field_info() : array {
  $extra = [];
  $extra['paragraph']['news_list']['display']['news_list'] = [
    'label' => new TranslatableMarkup('News list'),
    'description' => new TranslatableMarkup('The value for this field is defined in %hook hook.', [
      '%hook' => 'helfi_news_feed_paragraph_view()',
    ]),
    'weight' => 100,
    'visible' => TRUE,
  ];

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function helfi_news_feed_paragraph_view(array &$build, ParagraphInterface $entity, EntityViewDisplayInterface $display, string $view_mode) : void {
  if (!$entity instanceof NewsFeedParagraph) {
    return;
  }
  if ($display->getComponent('news_list')) {
    $storage = \Drupal::entityTypeManager()
      ->getStorage('helfi_news');
    $query = $storage
      ->getQuery();
    $query
      ->condition('langcode', $entity->language()->getId())
      ->range(0, $entity->getLimit());

    if ($tags = $entity->getTags()) {
      $query->condition('tags', $tags, 'IN');
    }

    $ids = $query->execute();
    $entities = $storage->loadMultiple(array_keys($ids));

    foreach ($entities as $entity) {
      $build['news_list'][] = \Drupal::entityTypeManager()
        ->getViewBuilder('helfi_news')
        ->view($entity);
    }
  }
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function helfi_news_feed_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['paragraph']['news_list'])) {
    $bundles['paragraph']['news_list']['class'] = NewsFeedParagraph::class;
  }
}
