<?php

/**
 * @file
 * Contains installation tasks for helfi_user_roles module.
 */

declare(strict_types = 1);

use Drupal\user\Entity\Role;

/**
 * Grants required permissions.
 */
function helfi_user_roles_grant_permissions() : void {
  $permissions = [
    'admin' => [
      // @user.
      'access user profiles',
      'administer users',
      'cancel account',
      'change own username',
    ],
    'content_producer' => [
      // @user.
      'access user profiles',
      'cancel account',
      'change own username',
    ],
    'editor' => [
      // @user.
      'access user profiles',
      'cancel account',
      'change own username',
    ],
  ];
  helfi_platform_config_grant_permissions($permissions);
}

/**
 * Implements hook_install().
 */
function helfi_user_roles_install($is_syncing) : void {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if ($is_syncing) {
    return;
  }

  helfi_user_roles_grant_permissions();
}

/**
 * Install 'super_administrator' role.
 */
function helfi_user_roles_update_9001() : void {
  if (Role::load('super_administrator')) {
    return;
  }
  // We can't use 'update_helper' service to re-install configuration because
  // it will re-install previously installed roles (from this module) and wipe
  // out the permissions because 'user.role.*.yml' configuration files define
  // no permissions.
  // Permissions are granted by individual modules in hook_install().
  Role::create([
    'id' => 'super_administrator',
    'label' => 'Super administrator',
    'status' => TRUE,
    'is_admin' => TRUE,
    'weight' => 7,
  ])
    ->save();
}
