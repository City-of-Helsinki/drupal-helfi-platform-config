<?php

/**
 * @file
 * Contains installation hooks for 'helfi_eu_cookie_compliance' module.
 */

declare(strict_types = 1);

/**
 * Implements hook_install().
 */
function helfi_eu_cookie_compliance_install($is_syncing) : void {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if ($is_syncing) {
    return;
  }

  // Install blocks.
  /** @var Drupal\helfi_platform_config\Helper\BlockInstaller $block_installer */
  $block_installer = Drupal::service('helfi_platform_config.helper.block_installer');

  foreach (helfi_eu_cookie_compliance_get_block_configuration() as $block_config) {
    ['block' => $block, 'variations' => $variations] = $block_config;
    $block_installer->install($block, $variations);
  }
}

/**
 * Gets the block configurations.
 *
 * Example block:
 *
 * @code
 * [
 *   'breadbrumbs' => [
 *     'block' => [
 *       ...
 *     ],
 *     'variations' => [
 *       ...
 *     ],
 *   ],
 * ];
 * @endcode
 *
 * @return array[]
 *   The block configurations.
 */
function helfi_eu_cookie_compliance_get_block_configuration() : array {
  return [
    'eucookiecomplianceblock' => [
      'block' => [
        'id' => 'eucookiecomplianceblock',
        'plugin' => 'eu_cookie_compliance_block',
        'provider' => 'helfi_eu_cookie_compliance',
        'settings' => [
          'id' => 'eu_cookie_compliance_block',
          'label' => 'Eu Cookie Compliance Block',
          'provider' => 'eu_cookie_compliance',
        ],
        'weight' => -8,
        'visibility' => [
          'request_path' => [
            'id' => 'request_path',
            'negate' => FALSE,
            'pages' => '/cookie-information-and-settings',
          ],
        ],
      ],
      'variations' => [
        [
          'theme' => 'hdbt',
          'region' => 'after_content',
        ],
        [
          'theme' => 'stark',
          'region' => 'content',
        ],
      ],
    ],
  ];
}
