<?php

/**
 * @file
 * Contains installation logic for Hel.fi TFA module.
 */

declare(strict_types=1);

use Drupal\user\Entity\Role;

/**
 * Implements hook_requirements().
 */
function helfi_tfa_requirements($phase) : array {
  if ($phase !== 'runtime') {
    return [];
  }

  $requirements = [];

  $key = \Drupal::config('key.key.tfa')->get('key_provider_settings');

  if (empty($key['key_value']) || $key['key_value'] === 'thisvaluewillbeoverridden1234567') {
    $requirements['helfi_tfa'] = [
      'title' => t('Hel.fi: TFA'),
      'severity' => REQUIREMENT_ERROR,
      'value' => t('The TFA key is not set or is using the default value.'),
    ];
  }
  return $requirements;
}

/**
 * Grants required permissions.
 */
function helfi_tfa_grant_permissions() : void {
  $roles = Role::loadMultiple();
  $permissions = [];

  // Allow all roles to setup TFA.
  foreach ($roles as $role) {
    $permissions[$role->id()] = [
      'setup own tfa',
      'disable own tfa',
    ];
  }
  helfi_platform_config_grant_permissions($permissions);
}

/**
 * Implements hook_install().
 */
function helfi_tfa_install($is_syncing) : void {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if ($is_syncing) {
    return;
  }

  helfi_tfa_grant_permissions();
}
