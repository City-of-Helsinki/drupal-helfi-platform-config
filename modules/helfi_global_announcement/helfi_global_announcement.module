<?php

/**
 * @file
 * Contains hooks for 'helfi_global_announcement' module.
 */

declare(strict_types=1);

use Drupal\Core\Cache\Cache;
use Drupal\helfi_etusivu_entities\Plugin\ExternalEntities\StorageClient\Announcements;

/**
 * Gets the block configurations.
 *
 * Example block:
 *
 * @code
 * [
 *   'breadcrumbs' => [
 *     'block' => [
 *       ...
 *     ],
 *     'variations' => [
 *       ...
 *     ],
 *   ],
 * ];
 * @endcode
 *
 * @return array[]
 *   The block configurations.
 */
function helfi_global_announcement_get_block_configurations(string $theme) : array {
  return [
    'global_announcement' => [
      'block' => [
        'id' => 'globalannouncement',
        'plugin' => 'global_announcements',
        'settings' => [
          'id' => 'global_announcements',
          'label' => 'Global announcement',
          'provider' => 'helfi_global_announcement',
        ],
        'provider' => 'helfi_global_announcement',
        'weight' => -14,
      ],
      'variations' => [
        [
          'theme' => $theme,
          'region' => 'before_content',
        ],
        [
          'theme' => 'stark',
          'region' => 'content',
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function helfi_global_announcement_cron(): void {
  // @todo Remove this once we've confirmed that PubSub cache invalidation works.
  $store = \Drupal::service('tempstore.shared')->get('global_announcement');
  $globalEntityStorage = \Drupal::entityTypeManager()
    ->getStorage('helfi_announcements');

  $externalAnnouncements = $globalEntityStorage
    ->loadMultiple();

  $newHash = hash('sha256', serialize($externalAnnouncements));
  $hash = $store->get('announcements');
  if ($hash !== $newHash) {
    $store->set('announcements', $newHash);
    Cache::invalidateTags([Announcements::$customCacheTag]);
  }
}
