<?php

/**
 * @file
 * Primary module hooks for helfi_media_chart module.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\Entity\BaseFieldOverride;

/**
 * Implements hook_platform_config_grant_permissions().
 */
function helfi_media_chart_platform_config_grant_permissions() : array {
  return [
    'admin' => [
      'create helfi_chart media',
      'delete any helfi_chart media',
      'delete own helfi_chart media',
      'edit any helfi_chart media',
      'edit own helfi_chart media',
    ],
    'content_producer' => [
      'create helfi_chart media',
      'delete own helfi_chart media',
      'edit any helfi_chart media',
      'edit own helfi_chart media',
    ],
    'editor' => [
      'create helfi_chart media',
      'delete any helfi_chart media',
      'delete own helfi_chart media',
      'edit any helfi_chart media',
      'edit own helfi_chart media',
    ],
  ];
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function helfi_media_chart_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) : void {
  if (
    $entity_type->id() === 'media' &&
    $bundle === 'helfi_chart' &&
    isset($fields['field_helfi_chart_url'])
  ) {
    $fields['field_helfi_chart_url']->addConstraint('ValidHelfiChartLink', []);
  }
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function helfi_media_chart_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) : array {
  $fields = [];

  // Switch Helfi Chart media type 'name' label to "Administrative title".
  if (
    $entity_type->id() == 'media' &&
    $bundle == 'helfi_chart' &&
    !empty($base_field_definitions['name'])
  ) {
    $field = BaseFieldOverride::createFromBaseFieldDefinition($base_field_definitions['name'], $bundle);
    $field->setLabel(t('Administrative title'));
    $fields['name'] = $field;
  }

  return $fields;
}

/**
 * Implements hook_theme().
 */
function helfi_media_chart_theme($existing, $type, $theme, $path) : array {
  return [
    'chart_iframe' => [
      'variables' => [
        'title' => NULL,
        'url' => NULL,
        'domain' => NULL,
      ],
      'template' => 'chart-iframe',
    ],
    'chart_iframe__media_library' => [
      'variables' => [
        'title' => NULL,
        'url' => NULL,
      ],
      'template' => 'chart-iframe--media-library',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_media_chart_preprocess_chart_iframe(&$variables): void {
  $variables['chart_service_url'] = $variables['domain'];

  if (Drupal::moduleHandler()->moduleExists('hdbt_cookie_banner')) {
    /** @var \Drupal\hdbt_cookie_banner\Services\CookieSettings $cookie_settings */
    $cookie_settings = \Drupal::service('hdbt_cookie_banner.cookie_settings');
    $variables['privacy_policy_url'] = $cookie_settings->getCookieSettingsPageUrl();
  }
  // @todo UHF-10862 Remove once the HDBT cookie banner module is in use.
  elseif (Drupal::moduleHandler()->moduleExists('helfi_eu_cookie_compliance')) {
    $variables['privacy_policy_url'] = helfi_eu_cookie_compliance_get_privacy_policy_url();
  }
}
