<?php

/**
 * @file
 * Primary module hooks for helfi_media_map module.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\helfi_media_map\Entity\HelMap;

/**
 * Implements hook_platform_config_grant_permissions().
 */
function helfi_media_map_platform_config_grant_permissions() : array {
  return [
    'admin' => [
      'create hel_map media',
      'delete any hel_map media',
      'delete own hel_map media',
      'edit any hel_map media',
      'edit own hel_map media',
    ],
    'content_producer' => [
      'create hel_map media',
      'delete own hel_map media',
      'edit any hel_map media',
      'edit own hel_map media',
    ],
    'editor' => [
      'create hel_map media',
      'delete any hel_map media',
      'delete own hel_map media',
      'edit any hel_map media',
      'edit own hel_map media',
    ],
  ];
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function helfi_media_map_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) : void {
  if ($entity_type->id() === 'media' && $bundle === 'hel_map') {
    if (isset($fields['field_media_hel_map'])) {
      $fields['field_media_hel_map']->addConstraint('ValidMediaMapLink', []);
    }
  }
}

/**
 * Implements hook_theme().
 */
function helfi_media_map_theme($existing, $type, $theme, $path) : array {
  return [
    'helfi_media_map' => [
      'variables' => ['link' => NULL, 'iframe' => NULL],
      'template' => 'helfi-media-map',
    ],
  ];
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function helfi_media_map_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['media']['hel_map'])) {
    $bundles['media']['hel_map']['class'] = HelMap::class;
  }
}
