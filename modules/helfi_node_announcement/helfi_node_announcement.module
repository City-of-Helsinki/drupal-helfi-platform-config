<?php

/**
 * @file
 * Contains hooks for 'helfi_node_announcement' module.
 */

declare(strict_types=1);

use Drupal\helfi_node_announcement\Entity\Announcement;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;

/**
 * Implements hook_platform_config_grant_permissions().
 */
function helfi_node_announcement_platform_config_grant_permissions() : array {
  return [
    'admin' => [
      'create announcement content',
      'delete announcement revisions',
      'delete any announcement content',
      'delete own announcement content',
      'edit any announcement content',
      'edit own announcement content',
      'revert announcement revisions',
      'set announcement published on date',
      'translate announcement node',
      'view announcement revisions',
    ],
    'content_producer' => [
      'create announcement content',
      'delete own announcement content',
      'edit any announcement content',
      'edit own announcement content',
      'revert announcement revisions',
      'set announcement published on date',
      'view announcement revisions',
    ],
    'editor' => [
      'create announcement content',
      'delete announcement revisions',
      'delete any announcement content',
      'delete own announcement content',
      'edit any announcement content',
      'edit own announcement content',
      'revert announcement revisions',
      'set announcement published on date',
      'translate announcement node',
      'view announcement revisions',
    ],
    'read_only' => [
      'view any unpublished announcement content',
    ],
  ];
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function helfi_node_announcement_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['node']['announcement'])) {
    $bundles['node']['announcement']['class'] = Announcement::class;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function helfi_node_announcement_form_node_form_alter(&$form, &$form_state, $form_id) : void {
  switch ($form_id) {
    case 'node_announcement_edit_form':
    case 'node_announcement_form':
      // Don't show "menu link translation" published checkbox, as
      // announcements cannot be added to any menu.
      if (isset($form['menu']['content_translation_status'])) {
        $form['menu']['content_translation_status']['#access'] = FALSE;
      }

      $contentPageStates = [
        'visible' => [
          ':input[name="field_announcement_all_pages[value]"]' => ['checked' => FALSE],
        ],
      ];

      if (isset($form['field_publish_externally'])) {
        $contentPageStates['visible'][':input[name="field_publish_externally[value]"]'] =
           ['checked' => FALSE];

        $form['field_announcement_all_pages']['#states'] = [
          'visible' => [
            ':input[name="field_publish_externally[value]"]' => ['checked' => FALSE],
          ],
        ];
      }

      $form['field_announcement_content_pages']['#states'] = $contentPageStates;
      break;
  }
}

/**
 * Implements hook_content_translation_status_access().
 */
function helfi_node_announcement_content_translation_status_access($form_id) : bool {
  return !in_array($form_id, ['node_announcement_edit_form', 'node_announcement_form']);
}

/**
 * Implements hook_entity_access().
 *
 * Prevent unauthenticated from accessing announcement-node page.
 */
function helfi_node_announcement_entity_access(
  EntityInterface $entity,
  $operation,
  AccountInterface $account,
): AccessResult {
  if (!$entity instanceof Announcement) {
    return AccessResult::neutral();
  }

  if ($account->isAnonymous()) {
    return AccessResult::forbidden();
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_form_alter().
 */
function helfi_node_announcement_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  if ($form_id !== 'node_announcement_edit_form') {
    return;
  }

  $form_state->setRedirectUrl(Url::fromRoute('view.content.page_1'));
}
