<?php

/**
 * @file
 * Contains hooks for 'helfi_paragraphs_list_of_links' module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\helfi_paragraphs_list_of_links\Entity\ListOfLinksItem;
use Drupal\helfi_platform_config\DTO\ParagraphTypeCollection;

/**
 * Implements hook_helfi_paragraph_types().
 */
function helfi_paragraphs_list_of_links_helfi_paragraph_types() : array {
  return [
    new ParagraphTypeCollection('paragraph', 'list_of_links', 'field_list_of_links_links', 'list_of_links_item'),
    new ParagraphTypeCollection('paragraphs_library_item', 'paragraphs_library_item', 'paragraphs', 'list_of_links'),
  ];
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function helfi_paragraphs_list_of_links_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['paragraph']['list_of_links_item'])) {
    $bundles['paragraph']['list_of_links_item']['class'] = ListOfLinksItem::class;
  }
}

/**
 * Implements hook_entity_update().
 */
function helfi_paragraphs_list_of_links_entity_update(EntityInterface $entity) {
  #UHF-9534 Prevent paragraph from maintaining unnecessary reference to media.
  if (
    !$entity instanceof \Drupal\paragraphs\ParagraphInterface ||
    $entity->getType() != 'list_of_links'
  ) {
    return;
  }

  if (
    $entity->hasField('field_list_of_links_design') &&
    $entity->get('field_list_of_links_design')->value == 'with-image'
  ) {
    return;
  }

  $entities = $entity->get('field_list_of_links_links')->referencedEntities();
  foreach($entities as $list_of_links_item) {
    if (!$list_of_links_item->get('field_list_of_links_image')->target_id) {
      continue;
    }
    $list_of_links_item->set('field_list_of_links_image', null);
    $list_of_links_item->save();
  }

}
