<?php

/**
 * @file
 * Contains installation tasks for helfi_ckeditor module.
 */

declare(strict_types = 1);

/**
 * Grants required permissions.
 */
function helfi_ckeditor_grant_permissions() : void {
  $permissions = [
    'admin' => [
      'use text format full_html',
      'use text format minimal',
    ],
    'content_producer' => [
      'use text format full_html',
      'use text format minimal',
    ],
    'editor' => [
      'use text format full_html',
      'use text format minimal',
    ],
  ];
  helfi_platform_config_grant_permissions($permissions);
}

/**
 * Implements hook_install().
 */
function helfi_ckeditor_install($is_syncing) : void {
  // Do not perform following steps if the module is being installed as part
  // of a configuration import.
  if ($is_syncing) {
    return;
  }

  helfi_ckeditor_grant_permissions();
}

/**
 * Allow colspan and rowspan attributes to be used in th and td tags.
 */
function helfi_ckeditor_update_9001(): void {
  \Drupal::service('helfi_platform_config.config_update_helper')
    ->update('helfi_ckeditor');
}

/**
 * UHF-8404 Reconstruct CKEditor generated blockquote elements.
 */
function helfi_ckeditor_update_9002(): void {
  $entity_type_manager = Drupal::entityTypeManager();
  $field_storage = $entity_type_manager->getStorage('field_config');

  // Load all field configurations.
  /** @var \Drupal\field\Entity\FieldConfig $field_config */
  foreach ($field_storage->loadMultiple() as $field_config) {

    // Go through each field and check for long text fields (html formatted).
    if ($field_config->getType() === 'text_long') {
      $field_storage_definition = $field_config->getFieldStorageDefinition();
      $entity_type = $field_config->getTargetEntityTypeId();

      /** @var \Drupal\Core\Entity\Sql\DefaultTableMapping $table_mapping */
      $table_mapping = $entity_type_manager->getStorage($entity_type)->getTableMapping();

      // Get current field's table name and column.
      $table_name = $table_mapping->getDedicatedDataTableName($field_storage_definition);
      $column = $table_mapping->getFieldColumnName($field_storage_definition, 'value');

      // Search for <blockquote> elements containing aria-label and
      // role="region" attributes...
      $regex_expressions = [
        'aria-label' => '<blockquote(.*?)aria-label="[^"]*"(.*?)>',
        'role' => '<blockquote(.*?)role="[^"]*"(.*?)>',
      ];

      foreach ($regex_expressions as $attribute => $regex) {
        $query = \Drupal::database()->select($table_name, 'v')
          ->distinct()
          ->fields('v', ['entity_id', $column])
          ->condition($column, $regex, 'REGEXP');

        $query_result = $query->execute()->fetchAll();

        if (!empty($query_result)) {
          \Drupal::messenger()->addMessage(
            t('Removed @attribute attribute from @number blockquote elements found in @column.',
              [
                '@number' => count($query_result),
                '@column' => $column,
                '@attribute' => $attribute,
              ]
            ));
          $replacement = '<blockquote$1$2>';
          $update = \Drupal::database()->update($table_name);
          $update->expression(
            $column,
            "REGEXP_REPLACE($column, :pattern, :replacement)",
            [':pattern' => $regex, ':replacement' => $replacement]
          );
          $result = $update->execute();
        }
      }
    }
  }
}

/**
 * Remove id attributes from header elements.
 */
function helfi_ckeditor_update_9003(): void {
  \Drupal::service('helfi_platform_config.config_update_helper')
    ->update('helfi_ckeditor');
}

/**
 * Install ckeditor5 and uninstall ckeditor4.
 */
function helfi_ckeditor_update_9004(): void {
  $moduleHandler = Drupal::service('module_handler');

  if (!$moduleHandler->moduleExists('ckeditor5')) {
    /** @var \Drupal\Core\Extension\ModuleInstallerInterface $moduleInstaller */
    $moduleInstaller = Drupal::service('module_installer');
    $moduleInstaller->install(['ckeditor5']);

    if ($moduleHandler->moduleExists('ckeditor')) {
      $moduleInstaller->uninstall(['ckeditor']);
    }

    \Drupal::service('helfi_platform_config.config_update_helper')
      ->update('helfi_ckeditor');

    // Update translations manually as CKEditor plugin translations might not
    // get translated due to libraries not being loaded via render arrays.
    foreach ([
      'modules/contrib/helfi_platform_config/modules/helfi_ckeditor/assets/js/build/helfiLanguageSelector.js',
      'modules/contrib/helfi_platform_config/modules/helfi_ckeditor/assets/js/build/helfiLink.js',
      'modules/contrib/helfi_platform_config/modules/helfi_ckeditor/assets/js/build/helfiQuote.js',
    ] as $file) {
      _locale_parse_js_file($file);
    }
  }
}
