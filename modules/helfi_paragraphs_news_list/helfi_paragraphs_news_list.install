<?php

/**
 * @file
 * Contains installation tasks for helfi_paragraphs_news_list module.
 */

declare(strict_types=1);

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Suffix all external entity IDs with langcode.
 */
function helfi_paragraphs_news_list_update_9003(&$sandbox) : void {
  $query = \Drupal::entityQuery('paragraph')
    ->condition('type', 'news_list')
    ->accessCheck(FALSE);

  if (!isset($sandbox['total'])) {
    $ids = $query->execute();

    $sandbox['total'] = count($ids);
    $sandbox['current'] = 0;

    if (empty($sandbox['total'])) {
      $sandbox['#finished'] = 1;
      return;
    }
  }

  $ids = $query
    ->range($sandbox['current'], 25)
    ->execute();

  if (empty($ids)) {
    $sandbox['#finished'] = 1;
    return;
  }

  $fields = [
    'field_helfi_news_neighbourhoods',
    'field_helfi_news_groups',
    'field_helfi_news_tags',
  ];

  foreach ($ids as $id) {
    $entity = Paragraph::load($id);

    foreach ($fields as $field) {
      $value = $entity->get($field);

      if ($value->isEmpty()) {
        continue;
      }
      // Suffix all existing target ids with langcode.
      /** @var \Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem $item */
      foreach ($value as $item) {
        // Make sure already updated items are not affected.
        [$id] = explode(':', $item->target_id);

        $item->target_id = sprintf('%s:%s', $id, $value->getLangcode());
      }
    }
    $entity->save();
    $sandbox['current']++;
  }

  $sandbox['#finished'] = $sandbox['current'] >= $sandbox['total'] ? 1 : ($sandbox['current'] / $sandbox['total']);
}

/**
 * Delete old field frontpage tid field.
 */
function helfi_paragraphs_news_list_update_9007() : void {
  $types = [
    'helfi_news_tags',
    'helfi_news_neighbourhoods',
    'helfi_news_groups',
  ];
  foreach ($types as $type) {
    FieldStorageConfig::loadByName($type, 'field_frontpage_term_id')?->delete();
  }
  \Drupal::service('helfi_platform_config.config_update_helper')
    ->update('helfi_paragraphs_news_list');
}

/**
 * UHF-11002: Update news list external entities.
 */
function helfi_paragraphs_news_list_update_9010() : void {
  // This is now automated.
}

/**
 * #UHF-12028 Remove the old "field_limit" -field.
 */
function helfi_paragraphs_news_list_update_9011() : void {
  $entity_type = 'paragraph';
  $field_name = 'field_limit';
  $bundle = 'news_list';

  $field_storage = FieldStorageConfig::loadByName($entity_type, $field_name);
  $field = FieldConfig::loadByName($entity_type, $bundle, $field_name);

  if (!$field_storage || !$field) {
    return;
  }

  $field_storage->delete();
  field_purge_batch(50);
}
