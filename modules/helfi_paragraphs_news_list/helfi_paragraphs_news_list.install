<?php

/**
 * @file
 * Contains installation tasks for helfi_paragraphs_news_list module.
 */

declare(strict_types = 1);

use Drupal\paragraphs\Entity\Paragraph;

/**
 * UHF-8135 Update news list paragraph translations.
 */
function helfi_paragraphs_news_list_update_9002(): void {
  \Drupal::service('helfi_platform_config.config_update_helper')
    ->update('helfi_paragraphs_news_list');
}

/**
 * Suffix all external entity IDs with langcode.
 */
function helfi_paragraphs_news_list_update_9003(&$sandbox) : void {
  $query = \Drupal::entityQuery('paragraph')
    ->condition('type', 'news_list')
    ->accessCheck(FALSE);

  if (!isset($sandbox['total'])) {
    $ids = $query->execute();

    $sandbox['total'] = count($ids);
    $sandbox['current'] = 0;

    if (empty($sandbox['total'])) {
      $sandbox['#finished'] = 1;
      return;
    }
  }

  $ids = $query
    ->range($sandbox['current'], 25)
    ->execute();

  if (empty($ids)) {
    $sandbox['#finished'] = 1;
    return;
  }

  $fields = [
    'field_helfi_news_neighbourhoods',
    'field_helfi_news_groups',
    'field_helfi_news_tags',
  ];

  foreach ($ids as $id) {
    $entity = Paragraph::load($id);

    foreach ($fields as $field) {
      $value = $entity->get($field);

      if ($value->isEmpty()) {
        continue;
      }
      // Suffix all existing target ids with langcode.
      foreach ($value as $item) {
        // Make sure existing items are not affected.
        [$id] = explode(':', $item->target_id);

        $item->target_id = sprintf('%s:%s', $id, $value->getLangcode());
      }
    }
    $entity->save();
    $sandbox['current']++;
  }

  $sandbox['#finished'] = $sandbox['current'] >= $sandbox['total'] ? 1 : ($sandbox['current'] / $sandbox['total']);
}
