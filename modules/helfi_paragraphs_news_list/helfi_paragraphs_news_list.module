<?php

/**
 * @file
 * Contains 'helfi_paragraphs_news_list' hooks.
 */

declare(strict_types=1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Url;
use Drupal\entity\BundleFieldDefinition;
use Drupal\helfi_api_base\Environment\EnvironmentEnum;
use Drupal\helfi_api_base\Environment\Project;
use Drupal\helfi_paragraphs_news_list\Entity\ExternalEntity\News;
use Drupal\helfi_paragraphs_news_list\Entity\NewsFeedParagraph;
use Drupal\paragraphs\ParagraphInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function helfi_paragraphs_news_list_entity_extra_field_info() : array {
  $extra = [];
  $extra['paragraph']['news_list']['display']['news_list'] = [
    'label' => new TranslatableMarkup('News list'),
    'description' => new TranslatableMarkup('The value for this field is defined in %hook hook.', [
      '%hook' => 'helfi_paragraphs_news_list_paragraph_view()',
    ]),
    'weight' => 100,
    'visible' => TRUE,
  ];

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function helfi_paragraphs_news_list_paragraph_view(
  array &$build,
  ParagraphInterface $entity,
  EntityViewDisplayInterface $display,
  string $view_mode,
) : void {
  if (!$entity instanceof NewsFeedParagraph) {
    return;
  }
  if ($display->getComponent('news_list')) {
    $storage = Drupal::entityTypeManager()
      ->getStorage('helfi_news');
    $query = $storage
      ->getQuery();
    $query
      ->condition('_language', $entity->language()->getId())
      ->range(0, $entity->getLimit());

    $termFilters = [
      'news_tags' => $entity->getTags(),
      'groups' => $entity->getGroups(),
      'neighbourhoods' => $entity->getNeighbourhoods(),
    ];
    foreach ($termFilters as $name => $value) {
      $query->condition($name, $value);
    }
    $query->sort('published_at', 'DESC');

    $query->accessCheck(FALSE);

    $ids = $query->execute();
    $entities = $storage->loadMultiple($ids);

    foreach ($entities as $item) {
      $item->addCacheableDependency($entity);

      $build['news_list'][] = Drupal::entityTypeManager()
        ->getViewBuilder('helfi_news')
        ->view($item, 'medium_teaser');
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function helfi_paragraphs_news_list_entity_bundle_field_info_alter(
  &$fields,
  EntityTypeInterface $entity_type,
  $bundle,
) : void {

  if ($entity_type->id() === 'helfi_news') {
    $termFields = [
      'tags' => new TranslatableMarkup('Tags'),
      'groups' => new TranslatableMarkup('Groups'),
      'neighbourhoods' => new TranslatableMarkup('Neighbourhoods'),
    ];

    // These are taxonomy term fields in 'Etusivu' instance.
    foreach ($termFields as $name => $label) {
      $fields[$name] = BundleFieldDefinition::create('string')
        ->setName($name)
        ->setLabel($label)
        ->setTargetEntityTypeId($entity_type->id())
        ->setTargetBundle($bundle)
        ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
        ->setSettings([
          'max_length' => 192,
        ])
        ->setDisplayConfigurable('view', TRUE);
    }

    // Additional entity info fields.
    $entity_info_fields = [
      'node_url' => new TranslatableMarkup('Node URL'),
      'published_at' => new TranslatableMarkup('Published at'),
      'short_title' => new TranslatableMarkup('Short title'),
    ];

    foreach ($entity_info_fields as $field_name => $field_label) {
      $fields[$field_name] = BundleFieldDefinition::create('string')
        ->setName($field_name)
        ->setLabel($field_label)
        ->setDisplayConfigurable('view', TRUE)
        ->setDisplayConfigurable('form', TRUE);
    }
  }
}

/**
 * Implements hook_entity_bundle_info_alter().
 */
function helfi_paragraphs_news_list_entity_bundle_info_alter(array &$bundles) : void {
  if (isset($bundles['paragraph']['news_list'])) {
    $bundles['paragraph']['news_list']['class'] = NewsFeedParagraph::class;
  }

  if (isset($bundles['helfi_news']['helfi_news'])) {
    $bundles['helfi_news']['helfi_news']['class'] = News::class;
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function helfi_paragraphs_news_list_preprocess_paragraph__news_list(&$variables) : void {
  $paragraph = $variables['paragraph'];
  $langcode = \Drupal::languageManager()
    ->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)
    ->getId();

  $refFields = [
    'field_helfi_news_groups' => 'groups',
    'field_helfi_news_tags' => 'topic',
    'field_helfi_news_neighbourhoods' => 'neighbourhoods',
  ];

  $params = [];
  foreach ($refFields as $fieldName => $paramKey) {
    $field = $paragraph->get($fieldName);

    if ($field->isEmpty()) {
      continue;
    }

    $terms = $field->referencedEntities();
    foreach ($terms as $term) {
      if (
        $term->hasField('field_frontpage_term_id') &&
        $external_tid = $term->get('field_frontpage_term_id')->value
      ) {
        // Format name to match app query param format.
        $params[$paramKey][] = str_replace(' ', '+', strtolower($external_tid));
      }
    }
  }
  /** @var \Drupal\helfi_api_base\Environment\EnvironmentResolverInterface $resolver */
  $resolver = \Drupal::service('helfi_api_base.environment_resolver');

  try {
    $environment = $resolver->getActiveEnvironmentName();
  }
  catch (\InvalidArgumentException) {
    $environment = EnvironmentEnum::Prod->value;
  }
  $instanceUrl = $resolver->getEnvironment(Project::ETUSIVU, $environment)
    ->getUrl($langcode);

  $instanceUrl = $instanceUrl . match ($langcode) {
    'fi' => '/uutiset',
    'sv' => '/nyheter',
    default => '/news',
  };
  $archiveUrl = Url::fromUri($instanceUrl, ['query' => $params]);

  // Assign the URL variable to the template.
  $variables['news_archive_url'] = $archiveUrl->toString();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function helfi_paragraphs_news_list_preprocess_external_entity__helfi_news__medium_teaser(&$variables) : void {
  /** @var \Drupal\helfi_paragraphs_news_list\Entity\ExternalEntity\News $entity */
  $entity = $variables['external_entity'];
  if ($entity->getEntityType()->id() !== 'helfi_news') {
    return;
  }

  $variables['node_url'] = $entity->getNodeUrl();
  $variables['published_at'] = $entity->getPublishedAt();
  $variables['short_title'] = $entity->short_title->value ?: $entity->title->value;
}
