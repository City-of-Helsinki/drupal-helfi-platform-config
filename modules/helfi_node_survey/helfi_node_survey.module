<?php

/**
 * @file
 * Contains hooks for 'helfi_node_survey' module.
 */

declare(strict_types=1);

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;

/**
 * Implements hook_platform_config_grant_permissions().
 */
function helfi_node_survey_platform_config_grant_permissions() : array {
  return [
    'survey_editor' => [
      'create survey content',
      'delete survey revisions',
      'delete any survey content',
      'delete own survey content',
      'edit any survey content',
      'edit own survey content',
      'revert survey revisions',
      'set survey published on date',
      'translate survey node',
      'view survey revisions',
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function helfi_node_survey_form_node_form_alter(&$form, &$form_state, $form_id) : void {
  switch ($form_id) {
    case 'node_survey_edit_form':
    case 'node_survey_form':
      // Don't show "menu link translation" published checkbox, as
      // surveys cannot be added to any menu.
      if (isset($form['menu']['content_translation_status'])) {
        $form['menu']['content_translation_status']['#access'] = FALSE;
      }

      if (isset($form['field_publish_externally'])) {
        $form['field_survey_content_pages']['#states'] = [
          'visible' => [
            ':input[name="field_publish_externally[value]"]' => ['checked' => FALSE],
          ],
        ];
      }

      break;
  }
}

/**
 * Implements hook_content_translation_status_access().
 */
function helfi_node_survey_content_translation_status_access($form_id) : bool {
  return !in_array($form_id, ['node_survey_edit_form', 'node_survey_form']);
}

/**
 * Implements hook_entity_access().
 *
 * Prevent unauthenticated from accessing survey-node page.
 */
function helfi_node_survey_entity_access(
  EntityInterface $entity,
  $operation,
  AccountInterface $account,
): AccessResult {
  if ($entity->bundle() !== 'survey') {
    return AccessResult::neutral();
  }

  if ($account->isAnonymous()) {
    return AccessResult::forbidden();
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_form_alter().
 */
function helfi_node_survey_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  if ($form_id !== 'node_survey_edit_form') {
    return;
  }

  $form_state->setRedirectUrl(Url::fromRoute('view.content.page_1'));
}
