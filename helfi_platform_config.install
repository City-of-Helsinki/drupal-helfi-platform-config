<?php

/**
 * @file
 * Contains install functions for Helfi Platform Config.
 */

use Symfony\Component\Yaml\Parser;

/**
 * Manually import all Helfi features configuration translations.
 *
 * See: https://www.drupal.org/project/drupal/issues/2845437
 */
function helfi_platform_config_update_8001() {
  helfi_platform_config_import_language_config();
}

/**
 * Manually update all dependant feature
 */
function helfi_platform_config_import_language_config() {
  $language_manager = \Drupal::languageManager();
  $yaml_parser = new Parser();

  // Features that should be skipped.
  $skip_features = ['helfi_example_content'];

  // The language code of the default locale.
  $site_default_langcode = $language_manager->getDefaultLanguage()->getId();

  // Scan features directory.
  $features_directory = scandir(__DIR__ . '/features');

  // Remove skipped features.
  $features = array_diff($features_directory, array('..', '.', $skip_features));

  // Go through each feature and apply the configurations.
  foreach ($features as $feature) {

    // The directory where the language config files reside.
    $language_config_directory = __DIR__ . "/features/{$feature}/config/install/language";

    // Sub-directory names (language codes).
    // The language code of the default language is excluded. If the user
    // chooses to install in Hungarian, French, or Spanish, the language config is
    // imported by core and the user has the chance to override it during the
    // installation process.
    $langcodes = array_diff(scandir($language_config_directory), array('..', '.', $site_default_langcode));

    foreach ($langcodes as $langcode) {
      // All .yml files in the language's config subdirectory.
      $config_files = glob("$language_config_directory/$langcode/*.yml");

      foreach ($config_files as $file_name) {
        // Information from the .yml file as an array.
        $yaml = $yaml_parser->parse(file_get_contents($file_name));
        // Uses the base name of the .yml file to get the config name.
        $config_name = basename($file_name, '.yml');
        // The language configuration object.
        $config = $language_manager->getLanguageConfigOverride($langcode, $config_name);

        foreach ($yaml as $config_key => $config_value) {
          // Updates the configuration object.
          $config->set($config_key, $config_value);
        }

        // Saves the configuration.
        $config->save();
      }
    }
  }
}
